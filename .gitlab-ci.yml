image: myood/godot-ci-android-export:godot-3.2.3
# cmd >&- closes `cmd` std out file descriptor for better performance

variables:
  APP_NAME: "Example"

stages:
  - unit_tests
  - export
  
# Download Gut from https://github.com/bitwes/Gut and install in your project
# As a result you should have a following directory in your repo: `addons/gut`
# If you don't need unit_tests, simply comment below section and `unit_tests` from stages
unit_tests:
  stage: unit_tests
  script:
    - godot -d -s --path . addons/gut/gut_cmdln.gd -gdir=res://tests -ginclude_subdirs -gexit

# Debug export is already setup in Docker image
# Things left to do (from Godot Editor GUI - no way to make them from CLI as of 07.2020) :
# - Project -> Install Android Build Template
# - create export named "Android" with desired HW targets (armeabi, arm, ...), enable custom build (check "Use Custom Build" in export settings)
# And then commit export_presets.cfg AND whole android directory
android_debug:
  stage: export
  before_script:
    # Quick check if basic settings are properly set
    - grep -F "export/android/jarsigner =" ~/.config/godot/editor_settings-3.tres | grep '".*"' -o | xargs ls
    - grep -F "export/android/debug_keystore =" ~/.config/godot/editor_settings-3.tres | grep '".*"' -o | xargs ls
    - grep -F "export/android/adb =" ~/.config/godot/editor_settings-3.tres | grep '".*"' -o | xargs ls
    - grep -F "export/android/custom_build_sdk_path =" ~/.config/godot/editor_settings-3.tres | grep '".*"' -o | xargs ls
    # Create directory for artifacts
    - mkdir -v -p export/android
    # Prevent android build gradlew from failing due to not executable
    - chmod +x android/build/gradlew
  script:
    - godot --quiet --export-debug "Android" export/android/${APP_NAME}-debug.apk >&-
    - ls export/android/${APP_NAME}-debug.apk # ls
  artifacts:
    name: ${APP_NAME}-debug
    paths:
      - export/android/${APP_NAME}-debug.apk

# Easiest way to setup is to:
# 1. create exports from Godot GUI with names "Android Release ..." matching names from android_release:script: (a little more explanation above in debug export section)
# 2. test it locally with your release kestore
# 3. replace release keystore password from export_presets.cfg with a fake one
# 4. commit release keystore to the project (not 100% safe, but at least real password is not stored in repo)
# 5.1 Go to Gitlab Project > Settings > CI/CD > Variables
# 5.2 Create variable K8S_SECRET_RELEASE_KEYSTORE_PASSWORD with your release keystore password as value.
### TODO - update this section
### For Best Security: the release keystore file should be K8S secret variable (not commited to the repo)
### see here - https://github.com/aBARICHELLO/godot-ci#android
android_armeabi:
  stage: export
  before_script:
    - sed 's@keystore/release_password=".*"@keystore/release_password="'$K8S_SECRET_RELEASE_KEYSTORE_PASSWORD'"@g' -i export_presets.cfg
    - mkdir -v -p export/android
    - chmod +x android/build/gradlew
  script:
    - godot --quiet --export "Android Release Armeabi-v7a" export/android/${APP_NAME}-armeabi.apk >&-
  artifacts:
    name: ${APP_NAME}-release
    paths:
      - export/android/

android_arm64:
  stage: export
  before_script:
    - sed 's@keystore/release_password=".*"@keystore/release_password="'$K8S_SECRET_RELEASE_KEYSTORE_PASSWORD'"@g' -i export_presets.cfg
    - mkdir -v -p export/android
    - chmod +x android/build/gradlew
  script:
    - godot --quiet --export "Android Release Arm64-v8a" export/android/${APP_NAME}-arm64.apk >&- 
  artifacts:
    name: ${APP_NAME}-release
    paths:
      - export/android/

android_x86:
  stage: export
  before_script:
    - sed 's@keystore/release_password=".*"@keystore/release_password="'$K8S_SECRET_RELEASE_KEYSTORE_PASSWORD'"@g' -i export_presets.cfg
    - mkdir -v -p export/android
    - chmod +x android/build/gradlew
  script:
    - godot --quiet --export "Android Release x86" export/android/${APP_NAME}-x86.apk >&-
  artifacts:
    name: ${APP_NAME}-release
    paths:
      - export/android/

android_x86_64:
  stage: export
  before_script:
    - sed 's@keystore/release_password=".*"@keystore/release_password="'$K8S_SECRET_RELEASE_KEYSTORE_PASSWORD'"@g' -i export_presets.cfg
    - mkdir -v -p export/android
    - chmod +x android/build/gradlew
  script:
    - godot --quiet --export "Android Release x86-64" export/android/${APP_NAME}-x86-64.apk >&-
  artifacts:
    name: ${APP_NAME}-release
    paths:
      - export/android/

